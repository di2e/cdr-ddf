//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.07.27 at 04:06:37 PM EDT 
//


package us.gov.ic.cvenum.ism._25x;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for CVEnumISM25X.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="CVEnumISM25X"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token"&gt;
 *     &lt;enumeration value="AEA"/&gt;
 *     &lt;enumeration value="NATO"/&gt;
 *     &lt;enumeration value="NATO-AEA"/&gt;
 *     &lt;enumeration value="25X1"/&gt;
 *     &lt;enumeration value="25X1-EO-12951"/&gt;
 *     &lt;enumeration value="25X2"/&gt;
 *     &lt;enumeration value="25X3"/&gt;
 *     &lt;enumeration value="25X4"/&gt;
 *     &lt;enumeration value="25X5"/&gt;
 *     &lt;enumeration value="25X6"/&gt;
 *     &lt;enumeration value="25X7"/&gt;
 *     &lt;enumeration value="25X8"/&gt;
 *     &lt;enumeration value="25X9"/&gt;
 *     &lt;enumeration value="50X1-HUM"/&gt;
 *     &lt;enumeration value="50X1"/&gt;
 *     &lt;enumeration value="50X2-WMD"/&gt;
 *     &lt;enumeration value="50X6"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "CVEnumISM25X", namespace = "urn:us:gov:ic:cvenum:ism:25x")
@XmlEnum
public enum CVEnumISM25X {


    /**
     * (U) 
     * 				When using a source document that contains portions of Restricted Data (RD)
     * 				or Formerly Restricted Data (FRD) where the RD/FRD source document(s) 
     * 				do not have declassification instructions, the derivatively classified 
     * 				document shall not contain a declassification date or event on the 
     * 				Declassify On line.  The following shall be annotated on the Declassify On 
     * 				line:  "Not Applicable or (N/A) to RD/FRD portions" and 
     * 				"See source list for NSI portions" separated by a period.  
     * 				The source list must include the declassification instruction 
     * 				for each of the source documents classified under E.O. 13526 and 
     * 				shall not appear in the classification authority block
     * 			
     * 
     */
    @XmlEnumValue("AEA")
    VALUE_1("AEA"),

    /**
     * (U) 
     * 	  			Since NATO information is not to be declassified or downgraded without the prior consent
     * 	  			of NATO, the “Declassify on” line of documents that commingle information classified by 
     * 	  			NATO and U.S. classified NSI, will read “N/A to NATO portions. 
     * 	  			See source list for NSI portions.” 
     * 	  			The NSI source list will appear beneath the classification authority block 
     * 	  			in a manner that clearly identifies it as separate and distinct.
     * 	  		
     * 
     */
    @XmlEnumValue("NATO")
    VALUE_2("NATO"),

    /**
     * (U) 
     * 	  			Handles special case of BOTH NATO and AEA as a single exemption.
     * 	  		
     * 
     */
    @XmlEnumValue("NATO-AEA")
    VALUE_3("NATO-AEA"),

    /**
     * (U) 
     * 				Reveal the identity of a confidential 
     * 				human source, a human intelligence source, 
     * 				a relationship with an intelligence or security
     * 				service of a foreign government or 
     * 				international organization, or a non-human 
     * 				intelligence source; or impair the 
     * 				effectiveness of an intelligence method 
     * 				currently in use, available for use, or under 
     * 				development.
     * 			
     * 
     */
    @XmlEnumValue("25X1")
    VALUE_4("25X1"),

    /**
     * (U) 
     * 				"25X1, EO 12951" (prescribed by the DNI for use on information described in E.O. 12951, 
     * 				Release of Imagery Acquired by Space-Based National Intelligence Reconnaissance Systems)
     * 			
     * 
     */
    @XmlEnumValue("25X1-EO-12951")
    VALUE_5("25X1-EO-12951"),

    /**
     * (U) 
     * 				Reveal information that would assist 
     * 				in the development, production, or use of 
     * 				weapons of mass destruction.
     * 			
     * 
     */
    @XmlEnumValue("25X2")
    VALUE_6("25X2"),

    /**
     * (U) 
     * 				Reveal information that would 
     * 				impair U.S. cryptologic systems or activities.
     * 			
     * 
     */
    @XmlEnumValue("25X3")
    VALUE_7("25X3"),

    /**
     * (U) 
     * 				Reveal information that would 
     * 				impair the application of state-of-the-art 
     * 				technology within a U.S. weapon system.
     * 			
     * 
     */
    @XmlEnumValue("25X4")
    VALUE_8("25X4"),

    /**
     * (U) 
     * 				Reveal formally named or numbered 
     * 				U.S. military war plans that remain in effect, 
     * 				or reveal operational or tactical elements of 
     * 				prior plans that are contained in such active 
     * 				plans;
     * 
     */
    @XmlEnumValue("25X5")
    VALUE_9("25X5"),

    /**
     * (U) 
     * 				Reveal information, including foreign 
     * 				government information, that would cause 
     * 				serious harm to relations between the United 
     * 				States and a foreign government, or to 
     * 				ongoing diplomatic activities of the United 
     * 				States
     * 			
     * 
     */
    @XmlEnumValue("25X6")
    VALUE_10("25X6"),

    /**
     * (U) 
     * 				Reveal information that would 
     * 				impair the current ability of United States 
     * 				Government officials to protect the President, 
     * 				Vice President, and other protectees for 
     * 				whom protection services, in the interest of 
     * 				the national security, are authorized.
     * 			
     * 
     */
    @XmlEnumValue("25X7")
    VALUE_11("25X7"),

    /**
     * (U) 
     * 				Reveal information that would 
     * 				seriously impair current national security 
     * 				emergency preparedness plans or reveal 
     * 				current vulnerabilities of systems, 
     * 				installations, or infrastructures relating to the 
     * 				national security.
     * 			
     * 
     */
    @XmlEnumValue("25X8")
    VALUE_12("25X8"),

    /**
     * (U) 
     * 				Violate a statute, treaty, or 
     * 				international agreement that does not permit 
     * 				the automatic or unilateral declassification of 
     * 				information at 25 years.
     * 			
     * 
     */
    @XmlEnumValue("25X9")
    VALUE_13("25X9"),

    /**
     * (U) 
     * 				When the information clearly and 
     * 				demonstrably could be expected to 
     * 				reveal the identity of a confidential 
     * 				human source or a human intelligence 
     * 				source.				
     * 			
     * 
     */
    @XmlEnumValue("50X1-HUM")
    VALUE_14("50X1-HUM"),

    /**
     * (U) 
     * 		  			The ISCAP has authorized use of this code in the FBI’s 
     * 		  			classification guidance (which results in a 75-year classification 
     * 		  			period) for any agency sourcing/reusing the information.			
     * 		  		
     * 
     */
    @XmlEnumValue("50X1")
    VALUE_15("50X1"),

    /**
     * (U) 
     * 				When the information clearly and 
     * 				demonstrably could reveal key design 
     * 				concepts of weapons of mass 
     * 				destruction.
     * 			
     * 
     */
    @XmlEnumValue("50X2-WMD")
    VALUE_16("50X2-WMD"),

    /**
     * (U) 
     * 		  			The ISCAP has authorized use of this code in the FBI’s 
     * 		  			classification guidance (which results in a 75-year classification 
     * 		  			period) for any agency sourcing/reusing the information.		
     * 		  		
     * 
     */
    @XmlEnumValue("50X6")
    VALUE_17("50X6");
    private final String value;

    CVEnumISM25X(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static CVEnumISM25X fromValue(String v) {
        for (CVEnumISM25X c: CVEnumISM25X.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
