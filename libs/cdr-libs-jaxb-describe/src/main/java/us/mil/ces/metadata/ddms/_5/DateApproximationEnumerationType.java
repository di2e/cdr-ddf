//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.07.27 at 04:06:37 PM EDT 
//


package us.mil.ces.metadata.ddms._5;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DateApproximationEnumerationType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DateApproximationEnumerationType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="1st qtr"/&gt;
 *     &lt;enumeration value="2nd qtr"/&gt;
 *     &lt;enumeration value="3rd qtr"/&gt;
 *     &lt;enumeration value="4th qtr"/&gt;
 *     &lt;enumeration value="circa"/&gt;
 *     &lt;enumeration value="early"/&gt;
 *     &lt;enumeration value="mid"/&gt;
 *     &lt;enumeration value="late"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "DateApproximationEnumerationType")
@XmlEnum
public enum DateApproximationEnumerationType {

    @XmlEnumValue("1st qtr")
    VALUE_1("1st qtr"),
    @XmlEnumValue("2nd qtr")
    VALUE_2("2nd qtr"),
    @XmlEnumValue("3rd qtr")
    VALUE_3("3rd qtr"),
    @XmlEnumValue("4th qtr")
    VALUE_4("4th qtr"),
    @XmlEnumValue("circa")
    VALUE_5("circa"),
    @XmlEnumValue("early")
    VALUE_6("early"),
    @XmlEnumValue("mid")
    VALUE_7("mid"),
    @XmlEnumValue("late")
    VALUE_8("late");
    private final String value;

    DateApproximationEnumerationType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DateApproximationEnumerationType fromValue(String v) {
        for (DateApproximationEnumerationType c: DateApproximationEnumerationType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
